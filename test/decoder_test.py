import torch
from models.encoder import Encoder
from models.decoder import Decoder


inputs = torch.rand(3, 80, 100)  # BxDxT
input_lengths = [100, 90, 80]
input_lengths = torch.IntTensor(input_lengths)

encoder = Encoder(2000, 80, 256)
encoder_output, encoder_log_prob, encoder_output_lengths = encoder(inputs, input_lengths)

targets = torch.ones(3, 20).to(torch.long)

decoder = Decoder(2000, 512, 512)
decoder_output_prob = decoder(targets, encoder_output, 0.9)

print(decoder_output_prob)
# tensor([[[-7.6445, -7.5885, -7.5712,  ..., -7.6166, -7.5925, -7.5792],
#          [-7.6450, -7.5924, -7.5608,  ..., -7.6037, -7.5837, -7.5793],
#          [-7.6258, -7.6064, -7.5629,  ..., -7.6116, -7.6038, -7.5734],
#          ...,
#          [-7.6474, -7.6029, -7.5659,  ..., -7.6105, -7.6092, -7.5778],
#          [-7.6365, -7.6067, -7.5667,  ..., -7.6171, -7.5964, -7.5774],
#          [-7.6512, -7.5883, -7.5705,  ..., -7.6072, -7.5915, -7.5808]],
#
#         [[-7.6323, -7.6186, -7.5665,  ..., -7.6059, -7.5903, -7.5878],
#          [-7.6271, -7.6150, -7.5651,  ..., -7.5939, -7.5778, -7.5806],
#          [-7.6431, -7.5996, -7.5598,  ..., -7.6105, -7.5808, -7.5853],
#          ...,
#          [-7.6361, -7.6088, -7.5797,  ..., -7.5978, -7.5797, -7.5827],
#          [-7.6366, -7.6095, -7.5679,  ..., -7.6028, -7.5807, -7.5668],
#          [-7.6281, -7.6086, -7.5732,  ..., -7.5980, -7.5892, -7.5614]],
#
#         [[-7.6352, -7.6281, -7.5611,  ..., -7.6114, -7.5911, -7.6032],
#          [-7.6379, -7.6033, -7.5547,  ..., -7.6076, -7.5899, -7.5752],
#          [-7.6436, -7.6084, -7.5561,  ..., -7.6068, -7.5771, -7.5725],
#          ...,
#          [-7.6508, -7.6158, -7.5593,  ..., -7.5950, -7.5949, -7.5733],
#          [-7.6376, -7.5979, -7.5575,  ..., -7.6153, -7.5834, -7.5748],
#          [-7.6382, -7.6025, -7.5645,  ..., -7.6110, -7.5886, -7.5842]]]

print(decoder_output_prob.size())  # torch.Size([3, 20, 2000])
